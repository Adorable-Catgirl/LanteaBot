import org.apache.tools.ant.filters.ReplaceTokens
repositories {
    mavenCentral()
}
apply plugin: 'java'
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}
def versionObj = new Version(major: 1, minor: 1, revision: 0)
dependencies { 
  compile fileTree(dir: 'lib', includes: ['*.jar'])
  compile 'org.unix4j:unix4j-command:0.3'
  compile 'org.reflections:reflections:0.9.9-RC1'
  compile 'org.apache.commons:commons-lang3:3.3.2'
  compile 'com.google.code.gson:gson:2.1'
  compile 'xstream:xstream:1.2.2'
  compile 'net.objecthunter:exp4j:0.4.0.ALPHA-3'
  compile 'com.google.api-client:google-api-client:1.18.0-rc'
  compile 'org.xerial:sqlite-jdbc:3.8.10.1'
  compile 'org.twitter4j:twitter4j-core:4.0.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (System.getenv().BUILD_NUMBER != null)
	ext.buildNumber = System.getenv().BUILD_NUMBER?.toInteger()
else
	ext.buildNumber = 0

archivesBaseName = "LanteaBot"

class Version {
    int major, minor, revision

    String getMajor() {
        "${major}"
    }

    String getMinor() {
        "${minor}"
    }

    String getRevision() {
        "${revision}"
    }

    String getBuild() {
        System.getenv("BUILD_NUMBER") ? System.getenv("BUILD_NUMBER") : "DEV"
    }

    String toString() {
        "${getMajor()}.${getMinor()}.${getRevision()}"
    }
}

def filteredSourceDir = file("${buildDir}/filtered")

sourceSets {
    // This source set will contain all sources that we filter
    filtered {
        java {
            srcDirs = [
                    filteredSourceDir,
            ]
        }
    }
}

// copy the main sources and filter any '@buildVersion@' occurences. 
task processVersion (type: Copy) {
    from sourceSets.main.java
    into filteredSourceDir
    filter(ReplaceTokens, tokens: [
            versionMajor: versionObj.getMajor(),
            versionMinor: versionObj.getMinor(),
            versionRevision: versionObj.getRevision(),
            versionBuild: versionObj.getBuild()
    ])
}
compileJava.dependsOn processVersion
jar {
   from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'AppStub'
    }
}
